// ConsoleApplication41.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <ctime>

int main()
{
    srand(time(0));

    ////Вывести массив в обратном порядке. 
    //int a[] = { 0,0,0,0,0 };
    //
    //
    //for (int i = 0; i < 5; i++) {
    //    std::cin >> a[i];
    //}
    //
    //for (int i = 4; i >= 0; i--) {
    //    std::cout << "\n" << a[i];
    //}
    //
    ////Вывести все элементы массива с чётными индексами.
    //int b[20];
    //
    //srand(clock());
    //
    //for (int i = 0; i < 20; i++) {
    //    b[i] = rand();
    //}
    //for (int i = 0; i < 20; i++) {
    //    if (i % 2 == 0) {
    //        std::cout << "\n" << b[i];
    //    }
    //}
    //
    ////Количество, сумма  и среднее арифметическое положительных элементов массива.
    //
    //
    //int c[10];
    //int k;
    //int summ;
    //for (int i = 0; i < 10; i++) {
    //    c[i] = -20 + rand() % 2001;
    //}
    //for (int i = 0; i < 10; i++) {
    //    if (c[i] >= 0) {
    //        k++;
    //        summ += c[i];
    //    }
    //}
    //std::cout << "\n kolvo: " << k << "\n summa: " << summ << "\n sr arif: " << summ / k << "\n";
    //
    //
    ////Определить количество определённых элементов массива.
    //
    //char arr[100];
    //
    //int count_num = 0;
    //int count_let = 0;
    //int count_zn = 0;
    //
    //for (int i = 0; i < 100; i++)
    //{
    //    std::cout << arr[i] << " ";
    //}
    //
    //for (int i = 0; i < 100; i++)
    //{
    //    if (isalpha(arr[i]))
    //    {
    //        count_let++;
    //    }
    //    else
    //    {
    //        if (isdigit(arr[i]))
    //        {
    //            count_num++;
    //        }
    //        else
    //            if (ispunct(arr[i]))
    //            {
    //                count_zn++;
    //            }
    //    }
    //}
    //
    //std::cout << "\n" << "Kolichestvo bukv = " << count_let << "\n" << "Kolichestvo chisel = " << count_num << "\n" << "Kolichestvo znakov punktuacii = " << count_zn;
    //
    //
    ////Cколько раз это число встречается в массиве.
    //
    //int d[100];
    //int x, count = 0;
    //for (int i = 0; i < 100; i++) {
    //    d[i] = rand() % 31;
    //    std::cout << d[i] << " ";
    //}
    //std::cout << "\nX: ";
    //std::cin >> x;
    //for (int i = 0; i < 100; i++)
    //    if (x == d[i])
    //        count++;
    //std::cout << "kolvo: " << count << "\n";
    //
    //Сумма элементов списка после отрицательного значения.

    //int e[20];
    //int x = 1;
    //int count = 0;
    //for (int i = 0; i < 20; i++) {
    //    e[i] = -10 + (rand() % 30);
    //    std::cout << e[i] << " ";
    //}
    //for (int i = 0; i < 20; i++) {
    //    if (e[i] < 0) {
    //        x += e[i];
    //        break;
    //    }
    //    break;
    //}
    //for (int i = 0; i < 20 - x; i++) {
    //    count += e[i];
    //}
    //std::cout << "\n" << count << "\n";
    //
    //
    ////Максимум и минимум.
    //
    //int f[20];
    //
    //int imax, imin = 0;
    //for (int i = 0; i < 20; i++) {
    //    f[i] = rand();
    //    std::cout << f[i] << " ";
    //}
    //
    //int max = f[0];
    //int min = f[0];
    //
    //for (int i = 0; i < 20; i++) {
    //    if (f[i] > max) {
    //        max = f[i];
    //    }
    //}
    //
    //for (int i = 0; i < 20; i++) {
    //    if (f[i] < min) {
    //        min = f[i];
    //    }
    //}
    //
    //std::cout << max << "\n" << min;
    //
    //Разрядность чисел.

    //int g[20];
    //int k1, k2, k3 = 0;
    //for (int i = 0; i < 20; i++) {
    //    g[i] = rand() % 200;
    //    std::cout << g[i] << " ";
    //}
    //for (int i = 0; i < 20; i++) {
    //    if (g[i] < 10) {
    //        k1++;
    //    }
    //    else if (g[i] < 100) {
    //        k2++;
    //    }
    //    else if (g[i] < 1000) {
    //        k3++;
    //    }
    //
    //    std::cout << "\n" << k1 * 100 / 200 << "\n" << k2 * 100 / 200 << "\n" << k3 * 100 / 200;
    //
    //}
    //
    ////Изменение порядка.
    //
    //int h[10];
    //int j[10];
    //for (int i = 0; i < 20; i++) {
    //    h[i] = rand();
    //    std::cout << h[i] << " ";
    //}
    //for (int i = 0; i < 20; i++) {
    //    j[i] = h[10 - i];
    //    std::cout << h[i] << " ";
    //}
    //
    //Обьединение массивов.

    int a1[5];
    int b1[5];
    int c1[10];
    int kk = 0;
    std::cout << "\n";
    for (int i = 0; i < 5; i++) {
        a1[i] = rand();
        std::cout << a1[i] << " ";
    }
    std::cout << "\n";
    for (int i = 0; i < 5; i++) {
        b1[i] = rand();
        std::cout << b1[i] << " ";
    }
    for (int i = 0; i < 5; i++)
    {
        c1[kk++] = a1[i];
        c1[kk++] = b1[i];
    }
    std::cout << "\n";
    for (int i = 0; i < 10; i++) {
        std::cout << c1[i] << " ";
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
